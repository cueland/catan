{
    "collab_server" : "",
    "contents" : "#' Get Resources (get_res)\n#'\n#' This function calculates the adjacent resources for a given corner id or corner identifier\n#' @param tiles A dataframe with a list axial coordinates and their corresponding resources\n#' @param id A string with nine coordinates ax,hor,corner for the 3 tiles corresponing to one corner\n#' @param x A vector with three elements in the format c(ax, hor, corner).\n#' @keywords\n#' @export\n#' @examples\n#' get_res(tiles, id=\"0,-3,2,1,-2,4,0,-2,6\")\n#' get_res(tiles, coords=c(1,-2,4))\n#' \n\nget_res <- function(tiles, id=NULL, coords=NULL) {\n  if(missing(id)) {\n    if(missing(coords)) {\n      stop(\"Must supply either id or coords.\")\n    }\n    else {\n      id <- calc_adj(coords)$id\n    }\n  }\n  # parse the id\n  dd <- data.frame(t(matrix(as.integer(str_split(id,\",\")[[1]]), nrow = 3, byrow = F, dimnames = list(c(\"ax\", \"hor\", \"corner\")))))\n  dd <- merge(dd,tiles[c(\"ax\", \"hor\", \"res\", \"value\", \"strength\")], by = c(\"ax\", \"hor\"))\n  res <- c(\"Brick\", \"Ore\", \"Sheep\", \"Wheat\", \"Wood\", \"Desert\")\n  # import port data\n  return(list(id = id,\n              tot_prob = sum(dd$strength),\n              res_count = sum(!is.na(dd$res)),\n              uniq_res = length(unique(dd$res)),\n              res = unique(as.character(dd$res)),\n              res_mat = data.frame(res = res,\n                                   strength = unlist(lapply(res, function(x) sum(dd$strength[dd$res==x]))),\n                                   count = unlist(lapply(res, function(x) sum(dd$res==x))))))\n}\n",
    "created" : 1564992587986.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2128004657",
    "id" : "259F1934",
    "lastKnownWriteTime" : 1564993279,
    "last_content_update" : 1564993279055,
    "path" : "~/Documents/Projects/catan/get_res.R",
    "project_path" : "get_res.R",
    "properties" : {
        "source_window_id" : "wu80oncg8qt99",
        "tempName" : "Untitled1"
    },
    "relative_order" : 12,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}