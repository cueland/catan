{
    "collab_server" : "",
    "contents" : "#' Calculate Adjacent Tiles (calc_adj)\n#'\n#' This function calculates the two adjacent tiles for a given corner\n#' @param x A vector with three elements in the format c(ax, hor, corner).\n#' @keywords \n#' @export\n#' @examples\n#' calc_adj(ax, hor, corner)\n#' \n\ncalc_adj <- function(x) {\n  # axial coordinate, horizontal coordinate, and corner numbered 1-6 starting at upper right corner\n  \n  # set up the matrices used to calculate the two (a1,a2) adjacent tiles\n  a1 <- matrix(c(1,0,3,1,1,4,0,1,5,-1,0,6,-1,-1,1,0,-1,2), ncol = 3, byrow = T)\n  a2 <- matrix(c(1,1,5,0,1,6,-1,0,1,-1,-1,2,0,-1,3,1,0,4), ncol = 3, byrow = T)\n  \n  # calculate a matrix of the 3 axial coordinates with their respective corners\n  y <- matrix(c(x,\n                x[1:2]+a1[x[3],1:2], a1[x[3],3],\n                x[1:2]+a2[x[3],1:2], a2[x[3],3]),ncol=3,byrow=T)\n  \n  # set the column names for the array\n  colnames(y) <- c(\"ax\", \"hor\", \"c\")\n  \n  # order the corner coordinates by the corners, either 1,3,5 or 2,4,6\n  y <- data.frame(y[order(y[,3]),])\n  \n  # reshape the matrix to an array (the reshape is done to create column names)\n  y$time <- 1:3\n  y$id <- 1\n  y <- reshape(y, idvar = \"id\", timevar = \"time\", direction = \"wide\")\n  \n  # create an unique corner id for the corner that can always identify the three\n  # hexes that correspond to the same corner\n  y$id <- paste(y[,2:ncol(y)], collapse=\",\")\n  \n  return(y)\n}",
    "created" : 1564771019922.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1016552077",
    "id" : "6397F240",
    "lastKnownWriteTime" : 1564993282,
    "last_content_update" : 1564993282693,
    "path" : "~/Documents/Projects/catan/calc_adj.R",
    "project_path" : "calc_adj.R",
    "properties" : {
        "source_window_id" : "wu80oncg8qt99",
        "tempName" : "Untitled1"
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}